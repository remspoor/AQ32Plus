/*
  October 2012

  aq32Plus Rev -

  Copyright (c) 2012 John Ihlein.  All rights reserved.

  Open Source STM32 Based Multicopter Controller Software

  Includes code and/or ideas from:

  1)AeroQuad
  2)BaseFlight
  3)CH Robotics
  4)MultiWii
  5)S.O.H. Madgwick
  6)UAVX

  Designed to run on the AQ32 Flight Control Board

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

///////////////////////////////////////////////////////////////////////////////

#pragma once

///////////////////////////////////////////////////////////////////////////////
// UART3 Init
///////////////////////////////////////////////////////////////////////////////

void uart3Init(void);

///////////////////////////////////////////////////////////////////////////////
// UART3 Available
///////////////////////////////////////////////////////////////////////////////

uint32_t uart3Available(void);

///////////////////////////////////////////////////////////////////////////////
// UART3 Clear Buffer
///////////////////////////////////////////////////////////////////////////////

void uart3ClearBuffer(void);

///////////////////////////////////////////////////////////////////////////////
// UART3 Number of Characters Available
///////////////////////////////////////////////////////////////////////////////

uint16_t uart3NumCharsAvailable(void);

///////////////////////////////////////////////////////////////////////////////
// UART3 Read
///////////////////////////////////////////////////////////////////////////////

uint8_t uart3Read(void);

///////////////////////////////////////////////////////////////////////////////
// UART3 Read Poll
///////////////////////////////////////////////////////////////////////////////

uint8_t uart3ReadPoll(void);

///////////////////////////////////////////////////////////////////////////////
// UART3 Write
///////////////////////////////////////////////////////////////////////////////

void uart3Write(uint8_t ch);

///////////////////////////////////////////////////////////////////////////////
// UART3 Print
///////////////////////////////////////////////////////////////////////////////

void uart3Print(char *str);

///////////////////////////////////////////////////////////////////////////////
// UART3 Print Formatted - Print formatted string to UART3
// From Ala42
///////////////////////////////////////////////////////////////////////////////

void uart3PrintF(const char * fmt, ...);

///////////////////////////////////////////////////////////////////////////////
// UART3 Print Binary
///////////////////////////////////////////////////////////////////////////////

void uart3PrintBinary(uint8_t *buf, uint16_t length);

///////////////////////////////////////////////////////////////////////////////
